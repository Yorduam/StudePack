import sqlite3, os.path, csv
from PyQt5 import QtSql

def dbCreate():
    print('üîÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite3')
    connection = sqlite3.connect('students.db') #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ë–î
    cursor = connection.cursor() #–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤

    try:
        # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS User (
                    user_id INTEGER PRIMARY KEY,
                    user_login TEXT NOT NULL,
                    user_password TEXT NOT NULL
        )
        ''')

        # –¢–∞–±–ª–∏—Ü–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS Specialization (
                    specialization_id INTEGER PRIMARY KEY,
                    specialization_name TEXT NOT NULL
        )
        ''')

        # –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS Teacher (
                    teacher_id INTEGER PRIMARY KEY,
                    teacher_name TEXT NOT NULL,
                    teacher_date INTEGER,
                    teacher_number INTEGER NOT NULL,
                    teacher_email TEXT NOT NULL
        )
        ''')

        # –¢–∞–±–ª–∏—Ü–∞ —É—á–µ–±–Ω—ã—Ö –≥—Ä—É–ø–ø
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS StudyGroup (
                    group_id INTEGER PRIMARY KEY,
                    group_name TEXT NOT NULL,
                    group_specialization INTEGER,
                    group_teacher INTEGER,
                    FOREIGN KEY(group_specialization) REFERENCES Specialization(specialization_id),
                    FOREIGN KEY(group_teacher) REFERENCES Teacher(teacher_id)
        )
        ''')

        # –¢–∞–±–ª–∏—Ü–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS Students (
                    student_id INTEGER PRIMARY KEY,
                    student_name TEXT NOT NULL,
                    student_date TEXT NOT NULL,
                    student_group INTEGER NOT NULL,
                    student_number INTEGER NOT NULL,
                    student_email TEXT,
                    student_passport TEXT NOT NULL,
                    student_snils TEXT,
                    student_inn TEXT,
                    student_gto TEXT,
                    student_motherName TEXT,
                    student_motherNumber INTEGER,
                    student_motherEmail TEXT,
                    student_fatherName TEXT,
                    student_fatherNumber INTEGER,
                    student_fatherEmail TEXT,
                    FOREIGN KEY(student_group) REFERENCES StudyGroup(group_id)
        )
        ''')

        record_User =[('user', 'user'),
                    ('admin', 'admin'),]

        record_Specialization = [('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',),
                                ('–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö —Å–µ—Ç–µ–π',)]
        
        record_Teacher =[('–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á','01.01.1990','79123456789','ivanov@mail.com'),
                        ('–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á','02.02.1991','78123456789','petrov@mail.com'),
                        ('–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤–∏—á','03.03.1993','77123456789','sidorov@mail.com'),
                        ('–ù–∏–∫–æ–ª–∞–µ–≤ –ù–∏–∫–æ–ª–∞–π –ù–∏–∫–æ–ª–∞–µ–≤–∏—á','04.04.1994','76123456789','nikolaev@mail.com'),
                        ('–°–º–∏—Ä–Ω–æ–≤ –°–µ—Ä–≥–µ–π –°–µ—Ä–≥–µ–µ–≤–∏—á','05.05.1995','75123456789','smirnov@mail.com'),
                        ('–ö—É–∑–Ω–µ—Ü–æ–≤ –ö—É–∑—å–º–∞ –ö—É–∑—å–º–∏—á','06.06.1996','74123456789','kuznetsov@mail.com'),
                        ('–°–æ–∫–æ–ª–æ–≤ –°–µ–º—ë–Ω –°–µ–º—ë–Ω–æ–≤–∏—á','07.07.1997','73123456789','sokolov@mail.com'),
                        ('–õ–µ–±–µ–¥–µ–≤ –õ–µ–≤ –õ—å–≤–æ–≤–∏—á','08.08.1998','72123456789','lebedev@mail.com'),
                        ('–í–æ–ª–∫–æ–≤ –í–ª–∞–¥–∏–º–∏—Ä –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á','09.09.1999','71123456789','volkov@mail.com'),
                        ('–î–º–∏—Ç—Ä–∏–µ–≤ –î–º–∏—Ç—Ä–∏–π –î–º–∏—Ç—Ä–∏–µ–≤–∏—á','02.02.1992','79123456789','dmitriev@mail.com'),]

        record_StudyGroup = [('–°–ò–ü-113/23', '1', '1'),
                            ('–°–ò–ü-123/23', '1', '2'),
                            ('–°–ò–ü-133/23', '1', '3'),
                            ('–°–ò–ü-143/23', '1', '4'),
                            ('–°–ò–ü-213/22', '1', '5'),
                            ('–°–ò–ü-223/22', '1', '6'),
                            ('–°–û–ë-113/23', '2', '7'),
                            ('–°–û–ë-213/22', '2', '8'),
                            ('–°–û–ë-223/22', '2', '9'),
                            ('–°–û–ë-123/23', '2', '10'),]

        record_Student = [('–ù–∏–∫–∏—Ç–∞ –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–ê–ª–µ–∫—Å–µ–π –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–§–µ–¥–æ—Ä –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–ê–Ω—Ç–æ–Ω –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–°—Ç–∞–Ω–∏—Å–ª–∞–≤ –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–ò–ª—å—è –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–ö–∏—Ä–∏–ª–ª –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–ú–∞–∫—Å –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–ù–∏–∫–æ–ª–∞–π –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru'),
                          ('–í–∞–¥–∏–º –ë—É—è–Ω–æ–≤', '24.01.2005', '1', '88005553535', 'bruh@mail.ru', '1234 567890', '123-456-789 00', '123456789012', '12-34-567890', '–ú–∞–º–∏–Ω–∞ –ú.–ú.', '880012345678', 'bruh@mail.ru', '–ü–∞–ø–∏–Ω –ü.–ü.', '880012345678', 'bruh@mail.ru')]

        cursor.executemany('''INSERT INTO User
                        (user_login, user_password)
                        VALUES (?, ?)''', record_User)
        
        cursor.executemany('''INSERT INTO Specialization
                        (specialization_name)
                        VALUES (?)''', record_Specialization)
        
        cursor.executemany('''INSERT INTO Teacher
                        (teacher_name, teacher_date, teacher_number, teacher_email)
                        VALUES (?, ?, ?, ?)''', record_Teacher)
        
        cursor.executemany('''INSERT INTO StudyGroup
                        (group_name, group_specialization, group_teacher)
                        VALUES (?, ?, ?)''', record_StudyGroup)
        
        cursor.executemany('''INSERT INTO Students
                           (student_name, student_date, student_group, student_number,
                           student_email, student_passport, student_snils, student_inn,
                           student_gto, student_motherName, student_motherNumber,
                           student_motherEmail, student_fatherName, student_fatherNumber,
                           student_fatherEmail)
                           VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)''', record_Student)

        connection.commit()
        connection.close()
        print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö students.db –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞')
    except ValueError:
        print('‚ö†Ô∏è –û—à–∏–±–∫–∞: ', Exception)
        connection.close()

def dbConnection():
    dbConnect = QtSql.QSqlDatabase.addDatabase('QSQLITE')
    dbConnect.setDatabaseName('students.db')
    try:
        dbConnect.open()
    except:
        print('‚ö†Ô∏è –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –û—à–∏–±–∫–∞!')

class dbRequest():
    def expStudents():
        conn = sqlite3.connect('students.db')
        cursor = conn.cursor()
        cursor.execute("select * from Students;")
        with open("students.csv", 'w',newline='') as csv_file: 
            csv_writer = csv.writer(csv_file)
            csv_writer.writerow([i[0] for i in cursor.description]) 
            csv_writer.writerows(cursor)
        conn.close()

    def expUsers():
        conn = sqlite3.connect('students.db')
        cursor = conn.cursor()
        cursor.execute("select * from User;")
        with open("user.csv", 'w',newline='') as csv_file: 
            csv_writer = csv.writer(csv_file)
            csv_writer.writerow([i[0] for i in cursor.description]) 
            csv_writer.writerows(cursor)
        conn.close()

    def expStudyGroup():
        conn = sqlite3.connect('students.db')
        cursor = conn.cursor()
        cursor.execute("select * from StudyGroup;")
        with open("studyGroup.csv", 'w',newline='') as csv_file: 
            csv_writer = csv.writer(csv_file)
            csv_writer.writerow([i[0] for i in cursor.description]) 
            csv_writer.writerows(cursor)
        conn.close()
    
    def expTeachers():
        conn = sqlite3.connect('students.db')
        cursor = conn.cursor()
        cursor.execute("select * from Teacher;")
        with open("teacher.csv", 'w',newline='') as csv_file: 
            csv_writer = csv.writer(csv_file)
            csv_writer.writerow([i[0] for i in cursor.description]) 
            csv_writer.writerows(cursor)
        conn.close()